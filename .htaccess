# PROJECT LIKE BERTRANDSUPPLIES.Ca
# switch all .HTML to php to NADA /page TO keep traffic of old page

# https://gist.github.com/prof3ssorSt3v3/6bff66af31611960107666ac7aba1d69
    # -------------------------------------------------
    # UTF-8 encoding
    # -------------------------------------------------

    # Use UTF-8 encoding for anything served text/plain or text/html
    AddDefaultCharset utf-8

    # Force UTF-8 for a number of file formats
    AddCharset utf-8 .html .css .js .xml .json .rss .atom .md

    # -------------------------------------------------
    # Directory Browsing
    # -------------------------------------------------

    Options +Indexes



    # -------------------------------------------------
    # Handling CORS
    # -------------------------------------------------
    Header Set Access-Control-Allow-Origin *

    # -------------------------------------------------
    # Directory Authentication
    # -------------------------------------------------
    #AuthType Basic
    #AuthName "The Realm of Westeros"
    #AuthUserFile  /Applications/MAMP/user-pass/.htpasswd
    #Require  user bob
    #Require valid-user

    # Examples of creating passwords from Terminal
    #/path/to/htpasswd -c /etc/htpasswd/.htpasswd user1
    #/path/to/htpasswd /etc/htpasswd/.htpasswd user2
# 



# Serve all resources labeled as `text/html` or `text/plain`
# AddDefaultCharset utf-8

# <IfModule mod_rewrite.c>
    # RewriteEngine on
    
    # RewriteRule ^phpSW/sw.js$ phpSW/sw.php [L] 
    # Redirects sw.js file to the php file
    # RewriteRule ^(.+)phpSW/sw-controller.js$ phpSW/sw-controller.php [L] 
    # Redirects sw-controller.js to the php file
    # RewriteRule ^(.+)-hsh([A-Za-z0-9]+).(.+)$ $1.$3 [L] 
    # Redirects the hashed file to the unhashed file

# </IfModule>

<IfModule mod_rewrite.c>

    # Options +FollowSymlinks
    RewriteEngine On
    # RewriteBase /




    # without WWW and SSL
    RewriteCond %{HTTPS} off [OR]
    RewriteCond %{HTTP_HOST} ^www\. [NC]
    RewriteCond %{HTTP_HOST} ^(?:www\.)?(.+)$ [NC]
    RewriteRule ^ https://%1%{REQUEST_URI} [L,NE,R=301]



    # Redirect to HTTPS
    # RewriteCond %{HTTPS} off
    # RewriteRule .* https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]



    #   This giving me a broken url for my OG and canonical in my website head
    #     <link rel="canonical" href="/">
    #     <meta name="twitter:image" content="/img/image.jpg">





    #   SSL
    # RewriteCond %{HTTPS} !on
    # RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}

    #  If I use this  WITH WWW and SSL
    # RewriteCond %{HTTPS} off [OR]
	# RewriteCond %{HTTP_HOST} !^www\. [NC]
	# RewriteCond %{HTTP_HOST} ^(.*)$  [NC]
	# RewriteRule (.*) https://www.%1/$1 [R=301,L]

    #   Everything is ok which is the one i will have to switch to if I can't fix this  
    #     The result is in the head
    #     <link rel="canonical" href="https://www.domainname.com">
    #     <meta name="twitter:image" content="https://www.domainname.com/img/image.jpg">




    #----REMOVE ext HTML PHP----------
    # RewriteCond %{REQUEST_FILENAME} !-f
    # RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME}.php -f
    RewriteRule ^(.+)$ /$1.php [L,QSA]

    # remove index.php 
    # RewriteCond %{REQUEST_URI} !/$ [NC]
    # RewriteCond %{REQUEST_URI} /index.(html?|php)$ [NC]
    # RewriteRule ^ https://%1%{REQUEST_URI} [L,NE,R=301]
    
    # RewriteRule .* https://punchunique.com/ [R=301,L]


    # REDIRECTS
    Redirect 301 /conception-site-internet-animation-mobile.php /
    Redirect 301 /cryptomonnaie-ethereum-bitcoin-nuvoo-minage.php /
    Redirect 301 /punchunique.com_web_dev.html /

    # Options -Indexes

    ErrorDocument 404 /404.php


    # https://www.view-page-source.com/howto-hide-website-source-code/#solutions
    # Allow any requests from example.com and any of its sub-domains
    # RewriteCond %{HTTP_REFERER} ^http://(?:.*\.)?example\.com
    # RewriteRule ^ - [L]
    # Deny everyone else, by sending a Forbidden (403) response
    # RewriteRule ^ - [F]
    # Document to show
    # ErrorDocument 403 /forbidden.html



    # CANONICAL URLS
	# RewriteCond %{HTTP_HOST} ^www\.punchunique\.com [NC,OR]
	# RewriteCond %{THE_REQUEST} /index\.(html|php) [NC]
	# RewriteRule (.*) https://punchunique.com/ [R=301,L]

    # Options +FollowSymlinks

    # NO WWW
    # RewriteCond %{HTTP_HOST} !^punchunique\.com$ [NC]
    # RewriteRule ^(.*)$ https://punchunique.com/$1 [R=301,L]

    # TO HTTPS
    # RewriteCond %{HTTPS} off
	# RewriteRule (.*) https://punchunique.com/$1 [R=301,L]

    #REMOVE TRAILING SLASH
    # RewriteCond %{REQUEST_FILENAME} !-d
    # RewriteRule ^(.*)/$ /$1 [L,R=301]
    #[L,R]  <- for test, for prod use [L,R=301]

    # WITHOPUT WWW
    # RewriteCond %{HTTPS} off [OR]
	# RewriteCond %{HTTP_HOST} ^www\.punchunique\.com [NC]
	# RewriteRule (.*) https://punchunique.com/$1 [L,R=301]

    # RewriteCond %{HTTPS} !on
    # RewriteCond %{HTTP_HOST} ^www\. [NC]
    # RewriteCond %{HTTP_HOST} ^(?:www\.)?(.+)$ [NC]
    # RewriteRule ^ https://%1%{REQUEST_URI} [L,NE,R=301]

    # SSL ONLY
    # RewriteCond %{HTTPS} !=on
    # RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

    # remove www
    # RewriteCond %{HTTP_HOST} ^www\.punchunique.com$ [NC]
    # RewriteRule .* http://punchunique.com/$1 [R=301,L]

    # REDIRECTS
    # To 301 Redirect an Entire Domain:
    # RedirectPermanent / http://www.new-domain.com/

    # Redirect 301 /solutions.php https://punchunique.com
    # Redirect 301 /solutions https://punchunique.com


    #EN CONSTRUCTION
    # DirectoryIndex /assets/1index-construction.html
    # DirectoryIndex conception-site-internet-animation-mobile.php

    # I used RewriteRule ^$ https://%{HTTP_HOST}/en/ [R,L] to have a more precise redirect and prevent a redirect loop#
    # RewriteRule ^$ https://%{HTTP_HOST}/conception-site-internet-animation-mobile [R,L]
    # RewriteRule ^$ https://%{HTTP_HOST}/conception-site-internet-animation-mobile
    # RewriteRule ^$ /conception-site-internet-animation-mobile [L]
   
    # Redirect 301 https://punchunique.com/conception-site-internet-animation-mobile.php index.php

    #----LANG-REDIRECT--------------------------------------------
    # RewriteCond %{HTTP:Accept-Language} ^fr [NC]
    # RewriteRule ^$ /conception-site-internet-animation-mobile [L,R=301]
    # RewriteRule ^$ https://%{HTTP_HOST}/

    # RewriteCond %{HTTP:Accept-Language} ((en|aa|ab|af|am|ar|as|ay|az|ba|be|bh|bi|bn|bo|br|ca|co|cs|cy|da|de|dz|el|eo|es|et|eu|fa|fi|fj|fo|fy|ga|gd|gl|gn|gu|ha|hi|hr|hu|hy|ia|ie|ik|in|is|it|iw|ja|ji|jw|ka|kk|kl|km|kn|ko|ks|ku|ky|la|ln|lo|lt|lv|mg|mi|mk|ml|mn|mo|mr|ms|mt|my|na|ne|no|oc|om|or|pa|pl|ps|pt|qu|rm|rn|ro|ru|rw|sa|sd|sg|sh|si|sk|sl|sm|sn|so|sq|sr|ss|st|su|sv|sw|ta|te|tg|th|ti|tk|tl|tn|to|tr|ts|tt|tw|uk|ur|uz|vi|vo|wo|xh|yo|zh|zu)) [NC]
    # RewriteRule ^$ /website-design-builder-animation-mobile [L,R=301]
    # RewriteRule ^$ https://%{HTTP_HOST}/website-design-builder-animation-mobile


</ifModule>

# <FilesMatch "sw-demo.js">
#   ExpiresDefault "now"
# </FilesMatch>
<Files sw-demo.js>
    # FileETag None # LIIT : disabled this to check if it allows cdn update 
    # Header unset ETag # LIIT : disabled this to check if it allows cdn update 
    #   Header set Cache-Control "max-age=0, no-cache, no-store, must-revalidate"
    #   Header set Pragma "no-cache"
    #   Header set Expires "Wed, 11 Jan 1984 05:00:00 GMT"
</Files>

# Below is custom site speed items
# We need to set correct content-type for fonts
#   AddType application/vnd.ms-fontobject .eot 
#   AddType application/x-font-ttf .ttf
#   AddType application/x-font-opentype .otf
#   AddType application/x-font-woff .woff
#   AddType image/svg+xml .svg
# Add Expires headers
<IfModule mod_expires.c>

            ExpiresActive on
            ExpiresDefault                               "access plus 1 year"
            ExpiresByType text/cache-manifest            "access plus 0 seconds"

            <Files "favicon.ico">
                ExpiresByType image/x-icon               "access plus 1 hour"
            </Files>

            ExpiresByType application/atom+xml           "access plus 1 hour"
            ExpiresByType application/rdf+xml            "access plus 1 hour"
            ExpiresByType application/rss+xml            "access plus 1 hour"

            ExpiresByType application/json               "access plus 0 seconds"
            ExpiresByType application/ld+json            "access plus 0 seconds"
            ExpiresByType application/schema+json        "access plus 0 seconds"
            ExpiresByType application/vnd.geo+json       "access plus 0 seconds"
            ExpiresByType text/xml                       "access plus 0 seconds

            ExpiresByType text/html                      "access plus 0 seconds"

            # -------NEW ----------------------------- NEW
            # Images
            ExpiresByType image/jpeg "access plus 1 year"
            ExpiresByType image/gif "access plus 1 year"
            ExpiresByType image/png "access plus 1 year"
            ExpiresByType image/webp "access plus 1 year"
            ExpiresByType image/svg+xml "access plus 1 year"
            ExpiresByType image/x-icon "access plus 1 year"

            # Video
            ExpiresByType video/mp4 "access plus 1 year"
            ExpiresByType video/mpeg "access plus 1 year"

            # CSS, JavaScript
            ExpiresByType text/css "access plus 1 month"
            ExpiresByType text/javascript "access plus 1 month"
            ExpiresByType application/javascript "access plus 1 month"

            # Others
            ExpiresByType application/pdf "access plus 1 month"
            ExpiresByType application/x-shockwave-flash "access plus 1 month"

            # Fonts
           # This part sets the expires for the fonts
            # ExpiresByType application/vnd.ms-fontobject "access plus 1 year"
            # ExpiresByType application/x-font-ttf "access plus 1 year"
            # ExpiresByType application/x-font-opentype "access plus 1 year"
            # ExpiresByType application/x-font-woff "access plus 1 year"
            # ExpiresByType image/svg+xml "access plus 1 year"

</IfModule>  

<IfModule mod_headers.c>



    # add this code in .htaccess
    # add custom authentication key's in header like app_key,auth_key..etc
    # Header set Access-Control-Allow-Origin "*"
    # Header set Access-Control-Allow-Headers: "customKey1,customKey2, headers, Origin, X-Requested-With, Content-Type, Accept, Authorization"



    # FROM https://webhint.io/docs/user-guide/hints/hint-no-html-only-headers/#examples-that-pass-the-hint
    # <FilesMatch "\.(appcache|atom|bbaw|bmp|crx|css|cur|eot|f4[abpv]|flv|geojson|gif|htc|ic[os]|jpe?g|m?js|json(ld)?|m4[av]|manifest|map|markdown|md|mp4|oex|og[agv]|opus|otf|pdf|png|rdf|rss|safariextz|svgz?|swf|topojson|tt[cf]|txt|vcard|vcf|vtt|webapp|web[mp]|webmanifest|woff2?|xloc|xml|xpi)$">
    #     Header unset Content-Security-Policy
    #     Header unset X-Content-Security-Policy
    #     Header unset X-Frame-Options
    #     Header unset X-UA-Compatible
    #     Header unset X-WebKit-CSP
    #     Header unset X-XSS-Protection
    # </FilesMatch>

    # # --------------------------------------feature POLICY----------------------------
    # # Feature-Policy: vibrate 'self'; usermedia *; sync-xhr 'self' https://mondor.punchunique.com

    Header always set Referrer-Policy "same-origin"
    # Header always append X-Frame-Options SAMEORIGIN
    Header always set X-Frame-Options SAMEORIGIN
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Content-Type-Options nosniff
    # Header set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
    Header set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" env=HTTPS
    Header set Connection keep-alive
    # Header set Access-Control-Allow-Origin *
    # Header always set X-FRAME-OPTIONS "DENY"


    # CSP
    # Header set Content-Security-Policy-Report-Only:default-src data: https://events-writer.smartlook.com; script-src 'self'; style-src 'self'; img-src 'self'; font-src 'self'

    # Header seSecurity-Policy-Report-Only:  default-src 'none'; font-src 'self'; img-src 'self' data:; script-src 'self' 'unsafe-inline' https://www.google-analytics.com/analytics.js; style-src 'unsafe-inline' ;t Content-

    # Header set Content-Security-Policy-Report-Only: default-src 'none'; form-action 'none'; frame-ancestors 'none'; style-src 'self'; script-src 'self'; img-src 'self';

    #   Header set Content-Security-Policy-Report-Only "default-src 'none'; form-action 'none'; frame-ancestors 'none'; style-src; script-src 'self'; img-src 'self';"

    #   Header set Content-Security-Policy " default-src 'self'; script-src 'self' www.google-apis.com ; img-src 'self';"

    # Header set Content-Security-Policy " default-src 'self';
    #   Header set Content-Security-Policy "default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';sha256-PLEF2QVlbvcd8M3zIXxQrLRe2ZptqM0vabGhNrwsL4c=; "

    #CSP from firefox addon csp generator
    #  Header set Content-Security-Policy " default-src 'none'; font-src 'self'; img-src 'self' data:; script-src 'unsafe-inline'; style-src 'unsafe-inline'  "



    ###################### CACHE

    # This sets up browser cache control
    # <filesMatch "\.(ico|jpe?g|png|gif|swf)$">
    #     Header set Cache-Control "public"
    # </filesMatch>
    # <filesMatch "\.(css)$">
    #     Header set Cache-Control "public"
    # </filesMatch>
    # <filesMatch "\.(js)$">
    #     Header set Cache-Control "private"
    # </filesMatch>
    # <filesMatch "\.(x?html?|php)$">
    # Header set Cache-Control "public"
    #     # Header set Cache-Control "private, must-revalidate"
    # </filesMatch>



    # 1 YEAR
    # <FilesMatch "\.(html|woff2|woff|js|css|htm|flv|ico|pdf|avi|mov|ppt|doc|mp3|wmv|wav|jpg|jpeg|png|gif|swf)$">
    #     # Header set Cache-Control "max-age=31536000, immutable"
    #     Header set Cache-Control "max-age=29030400, immutable"
    # </FilesMatch>

    # Because `mod_headers` cannot match based on the content-type,
    # the following workaround needs to be done.
    # 1) Add the `immutable` value to the `Cache-Control` header
    #    to all resources.
    # Header merge Cache-Control immutable

    # 2) Remove the value for all resources that shouldn't be have it.
    # <FilesMatch "\.(appcache|cur|geojson|ico|json(ld)?|x?html?|topojson|xml)$">
    #     Header edit Cache-Control immutable ""
    # </FilesMatch>



    # DISABLE  more compression https://webhint.io/docs/user-guide/hints/hint-http-compression/#examples-that-pass-the-hint
    <IfModule mod_rewrite.c>

            RewriteEngine On

            Options +FollowSymlinks

            # If the web host doesn't allow the `FollowSymlinks` option,
            # it needs to be comment out or removed, and then the following
            # uncomment, but be aware of the performance impact.
            #
            # https://httpd.apache.org/docs/current/misc/perf-tuning.html#symlinks

            # Options +SymLinksIfOwnerMatch

            # Depending on how the server is set up, you may also need to
            # use the `RewriteOptions` directive to enable some options for
            # the rewrite engine.
            # https://httpd.apache.org/docs/current/mod/mod_rewrite.html#rewriteoptions

            # RewriteBase /

            # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

            # 1) Brotli

                # If `Accept-Encoding` header contains `br`

                RewriteCond "%{HTTP:Accept-encoding}" "br"

                # and the request is made over HTTPS.

                RewriteCond "%{HTTPS}" "on"

                # The Brotli pre-compressed version of the file exists
                # (e.g.: `script.js` is requested and `script.js.gz` exists).

                RewriteCond "%{REQUEST_FILENAME}\.br" "-s"

                # Then, serve the Brotli pre-compressed version of the file.

                RewriteRule "^(.*)" "$1\.br" [QSA]

                # Set the correct media type of the requested file. Otherwise,
                # it will be served with the br media type since the file has
                # the `.br` extension.
                #
                # Also, set the special purpose environment variables so
                # that Apache doesn't recompress these files.

                RewriteRule "\.(ico|cur)\.br$"      "-" [T=image/x-icon,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.(md|markdown)\.br$"  "-" [T=text/markdown,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.appcache\.br$"       "-" [T=text/cache-manifest,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.atom\.br$"           "-" [T=application/atom+xml,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.bmp\.br$"            "-" [T=image/bmp,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.css\.br$"            "-" [T=text/css,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.eot.\.br$"           "-" [T=application/vnd.ms-fontobject,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.geojson\.br$"        "-" [T=application/vnd.geo+json,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.html?\.br$"          "-" [T=text/html,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.ics\.br$"            "-" [T=text/calendar,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.json\.br$"           "-" [T=application/json,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.jsonld\.br$"         "-" [T=application/ld+json,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.m?js\.br$"           "-" [T=text/javascript,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.otf\.br$"            "-" [T=font/otf,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.rdf\.br$"            "-" [T=application/rdf+xml,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.rss\.br$"            "-" [T=application/rss+xml,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.svg\.br$"            "-" [T=image/svg+xml,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.ttc\.br$"            "-" [T=font/collection,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.ttf\.br$"            "-" [T=font/ttf,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.txt\.br$"            "-" [T=text/plain,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.vc(f|ard)\.br$"      "-" [T=text/vcard,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.vtt\.br$"            "-" [T=text/vtt,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.webmanifest\.br$"    "-" [T=application/manifest+json,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.xhtml\.br$"          "-" [T=application/xhtml+xml,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.xml\.br$"            "-" [T=text/xml,E=no-brotli:1,E=no-gzip:1]

                # Set the `Content-Encoding` header.

                <FilesMatch "\.br$">
                    Header append Content-Encoding br
                </FilesMatch>

            # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

            # 2) Zopfli

                # If `Accept-Encoding` header contains `gzip` and the
                # request is made over HTTP.

                RewriteCond "%{HTTP:Accept-encoding}" "gzip"

                # The Zopfli pre-compressed version of the file exists
                # (e.g.: `script.js` is requested and `script.js.gz` exists).

                RewriteCond "%{REQUEST_FILENAME}\.gz" "-s"

                # Then serve the Zopfli pre-compressed version of the file.

                RewriteRule "^(.*)" "$1\.gz" [QSA]

                # Set the media types of the file, as otherwise, because
                # the file has the `.gz` extension, it wil be served with
                # the gzip media type.
                #
                # Also, set the special purpose environment variables so
                # that Apache doesn't recompress these files.

                RewriteRule "\.(ico|cur)\.gz$"      "-" [T=image/x-icon,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.(md|markdown)\.gz$"  "-" [T=text/markdown,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.appcache\.gz$"       "-" [T=text/cache-manifest,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.atom\.gz$"           "-" [T=application/atom+xml,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.bmp\.gz$"            "-" [T=image/bmp,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.css\.gz$"            "-" [T=text/css,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.eot.\.gz$"           "-" [T=application/vnd.ms-fontobject,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.geojson\.gz$"        "-" [T=application/vnd.geo+json,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.html?\.gz$"          "-" [T=text/html,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.ics\.gz$"            "-" [T=text/calendar,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.json\.gz$"           "-" [T=application/json,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.jsonld\.gz$"         "-" [T=application/ld+json,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.m?js\.gz$"           "-" [T=text/javascript,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.otf\.gz$"            "-" [T=font/otf,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.rdf\.gz$"            "-" [T=application/rdf+xml,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.rss\.gz$"            "-" [T=application/rss+xml,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.svg\.gz$"            "-" [T=image/svg+xml,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.ttc\.gz$"            "-" [T=font/collection,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.ttf\.gz$"            "-" [T=font/ttf,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.txt\.gz$"            "-" [T=text/plain,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.vc(f|ard)\.gz$"      "-" [T=text/vcard,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.vtt\.gz$"            "-" [T=text/vtt,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.webmanifest\.gz$"    "-" [T=application/manifest+json,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.xhtml\.gz$"          "-" [T=application/xhtml+xml,E=no-brotli:1,E=no-gzip:1]
                RewriteRule "\.xml\.gz$"            "-" [T=text/xml,E=no-brotli:1,E=no-gzip:1]

                # Set the `Content-Encoding` header.

                <FilesMatch "\.gz$">
                    Header append Content-Encoding gzip
                </FilesMatch>

            # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

            # Set the `Vary` header.

            <FilesMatch "\.(br|gz)$">
                Header append Vary Accept-Encoding
            </FilesMatch>

    </IfModule>

</IfModule>

# This is for gzip, which compresses files
<ifModule mod_gzip.c>
      mod_gzip_on Yes
      mod_gzip_dechunk Yes
      mod_gzip_item_include file .(html?|txt|css|js|php|pl)$
      mod_gzip_item_include handler ^cgi-script$
      mod_gzip_item_include mime ^text/.*
      mod_gzip_item_include mime ^application/x-javascript.*
      mod_gzip_item_exclude mime ^image/.*
      mod_gzip_item_exclude rspheader ^Content-Encoding:.*gzip.*
</ifModule>

# Serve resources with the proper media types (f.k.a. MIME types).
# https://www.iana.org/assignments/media-types/media-types.xhtml
<IfModule mod_mime.c>
        # Serve the following file types with the media type `charset`
            AddCharset utf-8 .appcache \
                         .atom \
                         .css \
                         .js \
                         .json \
                         .manifest \
                         .map \
                         .mjs \
                         .rdf \
                         .rss \
                         .vtt \
                         .webmanifest \
                         .xml 
                        #  .min.css \
                        #  .min.js 

        # Data interchange

            # 2.2.x+

            AddType text/xml                                    xml

            # 2.2.x - 2.4.x

            AddType application/json                            json
            AddType application/rss+xml                         rss

            # 2.4.x+

            AddType application/json                            map

        # JavaScript

            # 2.2.x+

            # See: https://html.spec.whatwg.org/multipage/scripting.html#scriptingLanguages.
            AddType text/javascript                             js mjs


        # Manifest files

            # 2.2.x+

            AddType application/manifest+json                   webmanifest
            AddType text/cache-manifest                         appcache


        # Media files

            # 2.2.x - 2.4.x

            AddType audio/mp4                                   f4a f4b m4a
            AddType audio/ogg                                   oga ogg spx
            AddType video/mp4                                   mp4 mp4v mpg4
            AddType video/ogg                                   ogv
            AddType video/webm                                  webm
            AddType video/x-flv                                 flv

            # 2.2.x+

            AddType image/svg+xml                               svgz
            AddType image/x-icon                                cur

            # 2.4.x+

            AddType image/webp                                  webp


        # Web fonts

            # 2.2.x - 2.4.x

            AddType application/vnd.ms-fontobject               eot

            # 2.2.x+

            AddType font/woff                                   woff
            AddType font/woff2                                  woff2
            AddType font/ttf                                    ttf
            AddType font/collection                             ttc
            AddType font/otf                                    otf


        # Other

            # 2.2.x+

            AddType text/vtt                                    vtt


        
    

</IfModule>

# more compression https://webhint.io/docs/user-guide/hints/hint-http-compression/#examples-that-pass-the-hint


<IfModule mod_deflate.c>

    # 3) gzip
    # [!] For Apache versions below version 2.3.7 you don't need to
    # enable `mod_filter` and can remove the `<IfModule mod_filter.c>`
    # and `</IfModule>` lines as `AddOutputFilterByType` is still in
    # the core directives.https://httpd.apache.org/docs/current/mod/mod_filter.html#addoutputfilterbytype

  
    AddOutputFilterByType DEFLATE "application/atom+xml" \
                                "application/json" \
                                "application/manifest+json" \
                                "application/rdf+xml" \
                                "application/rss+xml" \
                                "application/schema+json" \
                                "application/vnd.ms-fontobject" \
                                "application/xhtml+xml" \
                                "font/collection" \
                                "font/opentype" \
                                "font/otf" \
                                "font/ttf" \
                                "image/bmp" \
                                "image/svg+xml" \
                                "image/x-icon" \
                                "text/cache-manifest" \
                                "text/css" \
                                "text/html" \
                                "text/javascript" \
                                "text/plain" \
                                "text/vtt" \
                                "text/xml"
  

    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    # Special case: SVGZ
    #
    # If these files type would be served without the
    # `Content-Enable: gzip` response header, user agents would
    # not know that they first need to uncompress the response,
    # and thus, wouldn't be able to understand the content.

    <IfModule mod_mime.c>
        AddEncoding gzip              svgz
    </IfModule>


    # Remove browser bugs (only needed for really old browsers)
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
    Header append Vary User-Agent

</IfModule>





RewriteCond %{HTTP_HOST} ^punchunique\.com$ [OR]
RewriteCond %{HTTP_HOST} ^www\.punchunique\.com$
RewriteRule ^facebook$ "https\:\/\/www\.facebook\.com\/Promo\-269900983854933" [R=301,L]

